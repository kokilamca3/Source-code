{"name": "test_login", "status": "broken", "statusDetails": {"message": "AttributeError: png", "trace": "self = <test.test_hotel.TestEmployee object at 0x000001D287F08A60>, setup = None\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_login(self, setup):\n        s1 = Base()\n        l1 = Login_page(self.d)\n        s1.set_text(l1.get_txt_username(), \"Koku123ve\")\n        s1.set_text(l1.get_txt_password(), \"Koku123ve\")\n        s1.btn_click(l1.get_btn_id())\n    \n    \n        l2 = Searchhotel_page(self.d)\n        s1.drop_down1(l2.get_txt_location_id(), \"Sydney\")\n        s1.drop_down1(l2.get_txt_hotel_id1(), \"Hotel Creek\")\n        s1.drop_down1(l2.get_txt_roomtype_id(), \"Double\")\n        s1.drop_down1(l2.get_txt_roomnos(), \"3\")\n        s1.set_text(l2.get_txt_date(), \"01/06/2021\")\n        s1.set_text(l2.get_date_out_id(), \"10/06/2021\")\n        s1.drop_down1(l2.get_adult_id(), \"2\")\n        s1.drop_down1(l2.get_child_id(), \"1\")\n        s1.btn_click(l2.get_serch_btn_id())\n        l3 = Select_hotelpae(self.d)\n        s1.btn_click(l3.get_sele())\n        s1.btn_click(l3.get_continue_btn())\n        l4 = Bookhotel(self.d)\n        s1.set_text(l4.get_first_name(), \"koko\")\n        s1.set_text(l4.get_lname(), \"veeve\")\n        s1.set_text(l4.get_card_no(), \"1234567890123467\")\n        s1.drop_down1(l4.get_card_type(), \"AMEX\")\n        s1.drop_down1(l4.get_month_ex(), \"2\")\n        s1.drop_down1(l4.get_ex_year(), \"2022\")\n        s1.set_text(l4.get_cc_num(), \"12345\")\n        s1.set_text(l4.get_address(), \"elim nagar, 2nd cross street, chennai\")\n        s1.btn_click(l4.get_book_txt())\n        time.sleep(10)\n        # Print Book order pag\n        l5 = Book_order(self.d)\n        s1.getatt(l5.get_order_no())\n>       allure.attach(self.d.get_screenshot_as_png(), name=\"screenshot\", attachment_type=AttachmentType.png)\n\ntest_hotel.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <enum 'AttachmentType'>, name = 'png'\n\n    def __getattr__(cls, name):\n        \"\"\"\n        Return the enum member matching `name`\n    \n        We use __getattr__ instead of descriptors or inserting into the enum\n        class' __dict__ in order to support `name` and `value` being both\n        properties for enum members (which live in the class' __dict__) and\n        enum members themselves.\n        \"\"\"\n        if _is_dunder(name):\n            raise AttributeError(name)\n        try:\n            return cls._member_map_[name]\n        except KeyError:\n>           raise AttributeError(name) from None\nE           AttributeError: png\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\enum.py:405: AttributeError"}, "start": 1624946707641, "stop": 1624946731720, "uuid": "59e9d6ff-f95b-4e6a-bdf9-bfe31ad1604a", "historyId": "44455b45563e2354b5bff5ecd16be8ce", "testCaseId": "fc1ce517eda1fd5d586d490dd0830654", "fullName": "test_hotel.TestEmployee#test_login", "labels": [{"name": "severity", "value": "critical"}, {"name": "suite", "value": "test_hotel"}, {"name": "subSuite", "value": "TestEmployee"}, {"name": "host", "value": "DESKTOP-47B2QC9"}, {"name": "thread", "value": "18100-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_hotel"}]}